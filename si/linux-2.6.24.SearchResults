---- swap_info Matches (41 in 2 files) ----
Swap.h (include\linux):	SWP_USED	= (1 << 0),	/* is slot in swap_info[] used? */
Swapfile.c (mm):static struct swap_info_struct swap_info[MAX_SWAPFILES];
Swapfile.c (mm):		struct block_device *bdev = swap_info[swp_type(entry)].bdev;
Swapfile.c (mm):		si = swap_info + type;
Swapfile.c (mm):		    (!wrapped && si->prio != swap_info[next].prio)) {
Swapfile.c (mm):	si = swap_info + type;
Swapfile.c (mm):	p = & swap_info[type];
Swapfile.c (mm):			if (p->prio > swap_info[swap_list.next].prio)
Swapfile.c (mm):				swap_list.next = p - swap_info;
Swapfile.c (mm):		struct swap_info_struct *sis = swap_info + i;
Swapfile.c (mm):		if (swap_info[type].flags & SWP_WRITEOK) {
Swapfile.c (mm):			n = swap_info[type].pages;
Swapfile.c (mm):				n -= swap_info[type].inuse_pages;
Swapfile.c (mm):	struct swap_info_struct * si = &swap_info[type];
Swapfile.c (mm):		if (swap_info[i].inuse_pages)
Swapfile.c (mm): * corresponding to given index in swap_info (swap type).
Swapfile.c (mm):	sis = swap_info + swap_type;
Swapfile.c (mm):	for (type = swap_list.head; type >= 0; type = swap_info[type].next) {
Swapfile.c (mm):		p = swap_info + type;
Swapfile.c (mm):		swap_info[prev].next = p->next;
Swapfile.c (mm):		for (prev = -1, i = swap_list.head; i >= 0; prev = i, i = swap_info[i].next)
Swapfile.c (mm):			if (p->prio >= swap_info[i].prio)
Swapfile.c (mm):			swap_list.head = swap_list.next = p - swap_info;
Swapfile.c (mm):			swap_info[prev].next = p - swap_info;
Swapfile.c (mm):	struct swap_info_struct *ptr = swap_info;
Swapfile.c (mm):	struct swap_info_struct *endptr = swap_info + nr_swapfiles;
Swapfile.c (mm):		ptr = swap_info;
Swapfile.c (mm):	p = swap_info;
Swapfile.c (mm):		struct swap_info_struct *q = &swap_info[i];
Swapfile.c (mm):	for (i = swap_list.head; i >= 0; i = swap_info[i].next) {
Swapfile.c (mm):		if (p->prio >= swap_info[i].prio) {
Swapfile.c (mm):		swap_list.head = swap_list.next = p - swap_info;
Swapfile.c (mm):		swap_info[prev].next = p - swap_info;
Swapfile.c (mm):		if (!(swap_info[i].flags & SWP_USED) ||
Swapfile.c (mm):		     (swap_info[i].flags & SWP_WRITEOK))
Swapfile.c (mm):		nr_to_be_unused += swap_info[i].inuse_pages;
Swapfile.c (mm):	p = type + swap_info;
Swapfile.c (mm):	return &swap_info[type];
Swapfile.c (mm):	struct swap_info_struct *swapdev = swp_type(entry) + swap_info;
